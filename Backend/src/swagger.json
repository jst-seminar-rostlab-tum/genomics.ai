{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Genomics.ai ",
    "description": "Genomics.ai is a platform to annotate and visualise single-cell sequencing data using neural networks (e.g. for cancer research). The visualisation of annotation results is realised using a UMAP.",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "requestBodies": {
      "pictureUpload": {
        "required": true,
        "description": "raw png or jpg data",
        "content": {
          "image/png": {
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          "image/jpeg": {
            "schema": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "User",
      "description": "APIs for user (profile) registrations, authentication and information"
    },
    {
      "name": "Project",
      "description": "APIs for CRUD operations on Project"
    },
    {
      "name": "Institution",
      "description": "APIs for CRUD operations on Institution"
    },
    {
      "name": "Teams",
      "description": "APIs for CRUD operations on Teams"
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "security": [],
        "summary": "Authenticate user",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "note": {
                      "type": "string"
                    },
                    "isEmailVerified": {
                      "type": "boolean"
                    },
                    "isAdministrator": {
                      "type": "boolean"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "avatarUrl": {
                      "type": "string"
                    }
                  }
                },
                "jwt": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a user",
        "tags": ["User"],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "jwt": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/authorize_user/:id": {
      "get": {
        "summary": "Authorize a user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Used by an admin to authorize a specific user",
        "tags": ["User"]
      }
    },
    "/profile": {
      "get": {
        "summary": "Get a profile information",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/project/:id": {
      "get": {
        "summary": "Get detailed information about a project",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "tags": ["Project"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/projects": {
      "get": {
        "summary": "Get all projects that meet query params",
        "tags": ["Project"],
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/initiate_processing": {
      "post": {
        "summary": "Initiate processing",
        "tags": ["Project"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "uploadId": {
                    "type": "string"
                  }
                },
                "required": ["uploadId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "msg": {
                  "type": "string"
                },
                "user": {
                  "type": "string"
                },
                "jwt": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Processing cannot be initiated. The upload has to be finished uploading and can only be initiated once."
          },
          "403": {
            "description": "A user may only initiate their own projects!"
          },
          "404": {
            "description": "No team found with upload ID."
          }
        }
      }
    },
    "/password_reset": {
      "post": {
        "summary": "Make a request for password reset",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "User with the given email does not exist."
          }
        }
      }
    },
    "/password_reset/:token": {
      "post": {
        "summary": "Reset the password for given token",
        "tags": ["User"],
        "parameters": [
          {
            "in": "path",
            "name": "token",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["password"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Token could not be found. It may have been expired or used already"
          }
        }
      }
    },
    "/resend": {
      "post": {
        "summary": "Reset the password for given token",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  }
                },
                "required": ["email"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "404": {
            "description": "Could not find user with this e-mail. Please register."
          }
        }
      }
    },
    "/update_profile": {
      "post": {
        "summary": "Update profile data",
        "tags": ["User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "note": {
                    "type": "string"
                  }
                },
                "minProperties": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully"
          },
          "404": {
            "description": "Could not find user with this e-mail. Please register."
          }
        }
      }
    },
    "/user-avatar": {
      "post": {
        "summary": "Upload new profile picture for user",
        "tags": ["User"],
        "requestBody": {
          "$ref": "#/components/requestBodies/pictureUpload"
        },
        "responses": {
          "200": {
            "description": "URL pointing to the S3 bucket location of the uploaded image",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete profile picture of user",
        "tags": ["User"],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/file_download/results": {
      "post": {
        "summary": "Download results",
        "tags": ["Project"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": ["id"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/file_upload/complete_upload": {
      "post": {
        "summary": "Complete upload",
        "tags": ["Project"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ETag": {
                          "type": "string"
                        },
                        "PartNumber": {
                          "type": "number"
                        }
                      }
                    }
                  },
                  "uploadId": {
                    "type": "string"
                  }
                },
                "required": ["parts", "uploadId"],
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "/file_upload/get_upload_url": {
      "get": {
        "summary": "Get upload URL",
        "tags": ["Project"],
        "parameters": [
          {
            "in": "query",
            "name": "partNumber",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "uploadId",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/file_upload/start_upload": {
      "post": {
        "summary": "Start upload",
        "tags": ["Project"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "projectName": {
                    "type": "string"
                  },
                  "fileName": {
                    "type": "string"
                  },
                  "modelId": {
                    "type": "string"
                  },
                  "atlasId": {
                    "type": "string"
                  }
                },
                "required": ["fileName", "modelId", "atlasId", "projectName"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/institutions": {
      "post": {
        "summary": "Add institution",
        "tags": ["Institution"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "profilePictureURL": {
                    "type": "string"
                  },
                  "backgroundPictureURL": {
                    "type": "string"
                  }
                },
                "required": ["name", "country"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "summary": "Get all institutions that meet  query params",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/institutions/{id}/invite": {
      "put": {
        "summary": "Invite a user to institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "500": {
            "description": "Error: Internal Error."
          }
        }
      }
    },
    "/institutions/{id}/members": {
      "get": {
        "summary": "Get all members of an institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the instituion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/institutions/{id}/projects": {
      "get": {
        "summary": "Get all projects of an institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the instituion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/institutions/{id}/admin": {
      "put": {
        "summary": "Make a member of institution admin",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Invalid autherization permission!"
          }
        }
      }
    },
    "/institutions/{id}/join": {
      "put": {
        "summary": "Join as member of institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          },
          "401": {
            "description": "Invalid autherization permission!"
          }
        }
      },
      "delete": {
        "summary": "A member leaves the institution. (i.e. removes the reference that linked it with the institution)",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "institutionId": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "profilePictureURL": {
                      "type": "string"
                    },
                    "adminIds": {
                      "type": "array"
                    },
                    "memberIds": {
                      "type": "array"
                    },
                    "invitedMemberIds": {
                      "type": "array"
                    },
                    "createdAt": {
                      "type": "string"
                    },
                    "updatedAt": {
                      "type": "string"
                    },
                    "__v": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing parameters."
          },
          "403": {
            "description": "You are the only one admin of the institution."
          },
          "409": {
            "description": [
              "You are not member of the institution.",
              "Institution does not exist.",
              "Information of the user does not match.",
              "User does not exist."
            ]
          },
          "500": {
            "description": [
              "Internal error.",
              "Unable to remove user from a institution.",
              "Error when removing you from the institution."
            ]
          }
        }
      }
    },
    "/institutions/:id/profilepicture": {
      "post": {
        "summary": "Upload new profile picture for institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pictureUpload"
        },
        "responses": {
          "200": {
            "description": "URL pointing to the S3 bucket location of the uploaded image",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "summary": "Delete profile picture of institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/institutions/{id}/teams": {
      "get": {
        "summary": "Get teams for an institution",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Id of the instituion",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/teams": {
      "post": {
        "summary": "Create a team",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string"
                  }
                },
                "required": ["title", "description", "visibility"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      },
      "get": {
        "summary": "Get all teams that meet  query params",
        "tags": ["Team"],
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "visibility",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/teams/{id}": {
      "put": {
        "summary": "Update a team",
        "tags": ["Teams"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string"
                  },
                  "visibility": {
                    "type": "string",
                    "enum": ["PRIVATE", "PUBLIC", "BY_INSTITUTION"]
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/teams/{id}/invite": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Invite person to a team",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Invitation has been sent successfully."
          },
          "400": {
            "description": [
              "Missing parameters.",
              "User to be invited does not exist.",
              "Team does not exist."
            ]
          },
          "409": {
            "description": "User is already part of the team"
          },
          "500": {
            "description": [
              "Error when adding the user to members of the team.",
              "Error when sending email. Invitation has been stored.",
              "Unable to send invitation to the desired user."
            ]
          }
        }
      }
    },
    "/teams/{id}/admin": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Add a person to the adminIds list",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User has been changed to admin."
          },
          "400": {
            "description": ["Missing parameters.", "User does not exist.", "Team does not exist."]
          },
          "409": {
            "description": "User is not a member of the team. It should first become a member to become an admin."
          },
          "500": {
            "description": [
              "Unable to register new admin.",
              "Error when changing to user to admin profile.",
              "Internal error."
            ]
          }
        }
      }
    },
    "/teams/{id}/join": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Add a person into the team",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "projects": {
                  "type": "array"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adminIds": {
                  "type": "array"
                },
                "memberIds": {
                  "type": "array"
                },
                "invitedMemberIds": {
                  "type": "array"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                },
                "institutionId": {
                  "type": "string"
                },
                "visibility": {
                  "type": "string"
                }
              }
            },
          "400": {
            "description": [
              "Missing parameters.", 
              "User does not exist.", 
              "Team does not exist."]
          },
          "403": {
            "description" : "You are the only one admin of the team."
          },
          "409": {
            "description": [
              "User has not been verified.",
              "Information of the user does not match.",
              "User is an admin of the team.",
              "User is already a member of the team.",
              "Team is not associated to any institution and set-up requires it.",
              "User does not belong to the institution of the team."
            ]
          },
          "500": {
            "description": [
              "Internal error. Set-up",
              "Error when joining a new member into the team.",
              "Unable to register new admin.",
              "Internal error."
            ]
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Remove a person from the team",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "projects": {
                  "type": "array"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adminIds": {
                  "type": "array"
                },
                "memberIds": {
                  "type": "array"
                },
                "invitedMemberIds": {
                  "type": "array"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                },
                "institutionId": {
                  "type": "string"
                },
                "visibility": {
                  "type": "string"
                }
              }
            },
          "400": {
            "description": [
              "Missing parameters.", 
              "User does not exist.", 
              "Team does not exist."]
          },
          "403": {
            "description" : "You are the only one admin of the team."
          },
          "409": {
            "description": [
              "You are not member of the team.",
              "Information of the user does not match."
            ]
          },
          "500": {
            "description": [
              "Error when removing a member from the team.",
              "Unable to remove user from a team.",
              "Internal error."
            ]
          }
        }
      }
    },
    "/teams/{id}/institution": {
      "post": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Associate team with an institution",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "projects": {
                  "type": "array"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adminIds": {
                  "type": "array"
                },
                "memberIds": {
                  "type": "array"
                },
                "invitedMemberIds": {
                  "type": "array"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                },
                "institutionId": {
                  "type": "string"
                }
              }
            },
          "400": {
            "description": [
              "Missing parameters.",
              "Institution does not exist.",
              "Team does not exist."
            ]
          },
          "403":{
            "description": "You are not allowed to execute this operation."
          },
          "409": {
            "description": "Team has been already associated with an institution."
          },
          "500": {
            "description": [
              "Error when associating the team with the institution.",
              "Unable to associate the team with the institution.",
              "Internal error."
            ]
          }
        }
      },
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "summary": "Disassociate a team from an institution.",
        "tags": ["Teams"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "type": "string"
                  }
                },
                "required": ["userId"],
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated team",
            "schema": {
              "type": "object",
              "properties": {
                "_id": {
                  "type": "string"
                },
                "projects": {
                  "type": "array"
                },
                "title": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "adminIds": {
                  "type": "array"
                },
                "memberIds": {
                  "type": "array"
                },
                "invitedMemberIds": {
                  "type": "array"
                },
                "createdAt": {
                  "type": "string"
                },
                "updatedAt": {
                  "type": "string"
                },
                "__v": {
                  "type": "number"
                }
              }
            },
          "400": {
            "description": [
              "Missing parameters.",
              "Institution does not exist.",
              "Team does not exist."
            ]
          },
          "403":{
            "description": "You are not allowed to execute this operation."
          },
          "409": {
            "description": "Team has not been associated with the institution."
          },
          "500": {
            "description": [
              "Error when removing the team from the institution.",
              "Unable to register the team into the institution.",
              "Internal error."
            ]
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Search users",
        "tags": ["User"],
        "parameters": [
          {
            "in": "query",
            "name": "keyword",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Matching users as json array"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/institutions/:id": {
      "get": {
        "summary": "Get institution with id",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/users/:id/institutions": {
      "get": {
        "summary": "Get all institutions that user is a member",
        "tags": ["Institution"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/users/:id/teams": {
      "get": {
        "summary": "Get all teams that user is a member",
        "tags": ["Team"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    },
    "/users/:id/projects": {
      "get": {
        "summary": "Get all projects of the user",
        "tags": ["Project"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Failed. Bad post data."
          }
        }
      }
    }
  }
}
